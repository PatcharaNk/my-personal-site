{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,wBAAwB,0CAA0C,yCAAyC,KAAK,kBAAkB,qBAAqB,iBAAiB,wBAAwB,mBAAmB,eAAe,gBAAgB,+BAA+B,2BAA2B,yBAAyB,0BAA0B,KAAK,uBAAuB,qBAAqB,qBAAqB,wBAAwB,mBAAmB,eAAe,gBAAgB,+BAA+B,2BAA2B,yBAAyB,0BAA0B,KAAK,oBAAoB,kCAAkC,8BAA8B,wBAAwB,uBAAuB,uBAAuB,yBAAyB,KAAK,0BAA0B,uBAAuB,KAAK,4BAA4B,2BAA2B,eAAe,oBAAoB,wBAAwB,0BAA0B,KAAK,eAAe,oCAAoC,sBAAsB,KAAK,+CAA+C,gBAAgB,mBAAmB,kBAAkB,iBAAiB,KAAK,C;;;;;;;;;;;ACAxqC,uEAAuE,kCAAkC,sEAAsE,iKAAiK,wCAAwC,qCAAqC,8CAA8C,qB;;;;;;;;;;;;;;;;;;;;;ACAja;AAO1C;IALA;QAME,UAAK,GAAG,kBAAkB,CAAC;IAc7B,CAAC;IAZC,8BAAO,GAAP;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,CAAC;IACD,+BAAQ,GAAR;QACE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACtB,CAAC;IACD,6BAAM,GAAN;QACE,IAAM,KAAK,GAAG;YACZ,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK;SACvC,CAAC;QACF,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAdU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAexB;IAAD,mBAAC;CAAA;AAfwB;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAEM;AAY/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAVrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;aACd;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;ACftB;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"body {\\r\\n    font-family: \\\"Lato\\\", sans-serif;\\r\\n    transition: background-color .5s;\\r\\n}\\r\\n\\r\\n.sidenav {\\r\\n    height: 100%;\\r\\n    width: 0;\\r\\n    position: fixed;\\r\\n    z-index: 1;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    background-color: #111;\\r\\n    overflow-x: hidden;\\r\\n    transition: 0.5s;\\r\\n    padding-top: 60px;\\r\\n}\\r\\n\\r\\n.sidenav-show {\\r\\n    height: 100%;\\r\\n    width: 250px;\\r\\n    position: fixed;\\r\\n    z-index: 1;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    background-color: #111;\\r\\n    overflow-x: hidden;\\r\\n    transition: 0.5s;\\r\\n    padding-top: 60px;\\r\\n}\\r\\n\\r\\n.sidenav a {\\r\\n    padding: 8px 8px 8px 32px;\\r\\n    text-decoration: none;\\r\\n    font-size: 25px;\\r\\n    color: #818181;\\r\\n    display: block;\\r\\n    transition: 0.3s;\\r\\n}\\r\\n\\r\\n.sidenav a:hover {\\r\\n    color: #f1f1f1;\\r\\n}\\r\\n\\r\\n.sidenav .closebtn {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    right: 25px;\\r\\n    font-size: 36px;\\r\\n    margin-left: 50px;\\r\\n}\\r\\n\\r\\n#main {\\r\\n    transition: margin-left .5s;\\r\\n    padding: 16px;\\r\\n}\\r\\n\\r\\n@media screen and (max-height: 450px) {\\r\\n  .sidenav {padding-top: 15px;}\\r\\n  .sidenav a {font-size: 18px;}\\r\\n}\"","module.exports = \"<div id=\\\"mySidenav\\\" class=\\\"sidenav\\\" [ngStyle]=\\\"{'width':status ? '250px' : '0px' }\\\">\\n  <a href=\\\"#\\\" class=\\\"closebtn\\\" (click)=\\\"closeNav()\\\">&times;</a>\\n  <a href=\\\"#\\\">About</a>\\n  <a href=\\\"#\\\">Services</a>\\n  <a href=\\\"#\\\">Clients</a>\\n  <a href=\\\"#\\\">Contact</a>\\n</div>\\n\\n<div id=\\\"main\\\" [ngStyle]=\\\"{'margin-left': status ? '250px' : '0px'}\\\">\\n  <span  style=\\\"font-size:30px;cursor:pointer\\\" (click)=\\\"openNav()\\\">&#9776; open</span>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'my-personal-site';\n  status: boolean;\n  openNav() {\n    this.status = true;\n  }\n  closeNav() {\n    this.status = false;\n  }\n  setNav() {\n    const style = {\n      'width': this.status ? '250px' : '0px',\n    };\n    return style;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}